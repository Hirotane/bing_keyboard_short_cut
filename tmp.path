diff --git a/b_search.js b/b_search.js
index 3ceea00..38405c7 100644
--- a/b_search.js
+++ b/b_search.js
@@ -27,15 +27,17 @@
                 searchTypeM = options.selectSearchType && e.key == 'M' && e.shiftKey && !shortcuts.isInputActive(),
                 searchTypeS = options.selectSearchType && e.key == 'S' && e.shiftKey && !shortcuts.isInputActive(),
                 unfocusWithBracket = options.unfocusWithBracket && e.key == '[' && e.ctrlKey && shortcuts.isInputActive();
+            
+            console.log(this.searchType)
 
-            var here = window.location.href;
-            var regExpAll = new RegExp('^https://www.bing.com/search/*');
-            var regExpImage = new RegExp('^https://www.bing.com/images/search/*');
-            if (here.match(regExpAll)) {
-                var searchType = "all";
-            } else if (here.match(regExpImage)) {
-                var searchType = "image";
-            }
+            // var here = window.location.href;
+            // var regExpAll = new RegExp('^https://www.bing.com/search/*');
+            // var regExpImage = new RegExp('^https://www.bing.com/images/search/*');
+            // if (here.match(regExpAll)) {
+            //     var searchType = "all";
+            // } else if (here.match(regExpImage)) {
+            //     var searchType = "image";
+            // }
 
             // select search type
             if (searchTypeA) {
diff --git a/b_search_utils.js b/b_search_utils.js
index 0228dca..b49a258 100644
--- a/b_search_utils.js
+++ b/b_search_utils.js
@@ -10,22 +10,33 @@ var shortcuts = {
         unfocusWithESC: true,
         unfocusWithBracket: true
     },
+    searchType: "all",
     loadOptions: function(callback) {
         chrome.storage.sync.get(this.defaultOptions, callback);
 
-        // back to the position in focus when returnd to search page from web-sites
-        var focusIndex = sessionStorage.getItem('focusIndex');
-        // set the focus index to 0 when transition of search pages is occured or page is reloaded
-        if (window.location.href != sessionStorage.getItem('lastQueryUrl') ||
-            window.performance.getEntriesByType('navigation')[0].type == 'reload') {
-            focusIndex = 0;
-            sessionStorage.setItem('focusIndex', focusIndex);
-        }
+        var here = window.location.href;
+        var regExpAll = new RegExp('^https://www.bing.com/search/*');
+        var regExpImage = new RegExp('^https://www.bing.com/images/search/*');
+        if (here.match(regExpAll)) {
+            this.searchType = "all";
+            console.log("this.searchType: "+this.searchType);
+            // back to the position in focus when returnd to search page from web-sites
+            var focusIndex = sessionStorage.getItem('focusIndex');
+            // set the focus index to 0 when transition of search pages is occured or page is reloaded
+            if (window.location.href != sessionStorage.getItem('lastQueryUrl') ||
+                window.performance.getEntriesByType('navigation')[0].type == 'reload') {
+                focusIndex = 0;
+                sessionStorage.setItem('focusIndex', focusIndex);
+            }
 
-        var results = this.getVisibleResults();
-        var target = results[focusIndex];
-        target.focus();
-        this.underLine(target);
+            var results = this.getVisibleResults();
+            var target = results[focusIndex];
+            target.focus();
+            this.underLine(target);
+        } else if (here.match(regExpImage)) {
+            this.searchType = "image";
+            console.log("this.searchType: "+this.searchType);
+        }
     },
     isInputActive: function () {
         var activeElement = document.activeElement;
@@ -65,6 +76,10 @@ var shortcuts = {
             event.target.style.textDecoration = '';
         });
     },
+    emphasizeFocus: function(elt) {
+        elt.style.outlineWidth = 'medium';
+        elt.style.outlineColor = '#1e90ff';
+    },
     focusResult: function(offset) {
         var results = this.getVisibleResults();
         var focusIndex = this.defineRangeOfIndex(Number(sessionStorage.getItem('focusIndex')) + offset, results.length);
@@ -94,6 +109,7 @@ var shortcuts = {
         sessionStorage.setItem('focusIndexImgVtcl', focusIndex);
         this.scrollSearchResults(target, offset);
         target.focus();
+        this.emphasizeFocus(target);
     },
     horizontalImageMove: function(offset) {
         var results = this.getImageRowResults(sessionStorage.getItem('imageRowHeading') ?? 1);
@@ -104,6 +120,7 @@ var shortcuts = {
         sessionStorage.setItem('imageColumnIndex', index+1);
         sessionStorage.setItem('focusIndexImgHrzn', focusIndex);
         target.focus();
+        this.emphasizeFocus(target);
     },
     moveSearchPage: function(offset) {
         if (offset == 1){
diff --git a/tmp.path b/tmp.path
index 8e61ea9..f04f293 100644
--- a/tmp.path
+++ b/tmp.path
@@ -1,59 +0,0 @@
-diff --git a/b_search.js b/b_search.js
-index 3eedc99..e03bdf2 100644
---- a/b_search.js
-+++ b/b_search.js
-@@ -28,6 +28,15 @@
-                 searchTypeS = options.selectSearchType && e.key == 'S' && e.shiftKey && !shortcuts.isInputActive(),
-                 unfocusWithBracket = options.unfocusWithBracket && e.key == '[' && e.ctrlKey && shortcuts.isInputActive();
- 
-+            var here = window.location.href;
-+            var regExpAll = new RegExp('^https://www.bing.com/search/*');
-+            var regExpImg = new RegExp('^https://www.bing.com/image/search/*');
-+            if (here.match(regExpAll)) {
-+                var searchType = "all";
-+            } else if (here.match(regExpImage)) {
-+                var searchType = "image";
-+            }
-+
-             // select search type
-             if (searchTypeA) {
-                 shortcuts.changeSearchType('all');
-@@ -49,14 +58,22 @@
-                 // console.log("j or k");
-                 e.preventDefault();
-                 e.stopPropagation();
--                shortcuts.focusResult(shouldNavigateNext ? 1 : -1);
-+                if (searchType == "all") {
-+                    shortcuts.focusResult(shouldNavigateNext ? 1 : -1);
-+                } if (searchType == "image") {
-+                    shortcuts.verticalImageMove(shouldNavigateNext ? 1 : -1);
-+                }
-             }
-             // search page transition
-             if (moveNextSearchPage || movePreviousSearchPage) {
-                 // console.log("h or l");
-                 e.preventDefault();
-                 e.stopPropagation();
--                shortcuts.moveSearchPage(moveNextSearchPage ? 1 : -1);
-+                if (searchType == "all") {
-+                    shortcuts.moveSearchPage(moveNextSearchPage ? 1 : -1);
-+                } if (searchType == "img") {
-+                    shortcuts.horizontalImageMove(shouldNavigateNext ? 1 : -1);
-+                }
-             }
-             // page transition for all url
-             if (goToPreviousPage || goToNextPage) {
-diff --git a/b_search_utils.js b/b_search_utils.js
-index 005a6c7..952acf2 100644
---- a/b_search_utils.js
-+++ b/b_search_utils.js
-@@ -71,6 +71,9 @@ var shortcuts = {
- 
-         target.focus();
-         this.underLine(target);
-+    },
-+    verticalImageMove: function(offset) {
-+
-     },
-     moveSearchPage: function(offset) {
-         if (offset == 1){
